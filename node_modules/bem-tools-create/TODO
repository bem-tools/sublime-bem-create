1. logs

handle errors in CLI
не подхватывается технологии из левела из конфига

тесты про шаблоны через id
2. вычислять текущую сущность по контексту
3. искать реальные уровни, всплывать (?)


тесты про brach expantion


/**
 * Search for the nearest level recursively from the specified
 * directory to the filesystem root.
 *
 * @param {String} path  Path to start search from.
 * @param {String[]|String|Undefined} [types]  Level type to search.
 * @param {String} [startPath]
 * @return {String}  Found level path or specified path if not found.
 */
// function findLevel(path, types, startPath) {
//     var createLevel = require('./level').createLevel;

//     if (types && !Array.isArray(types)) types = [types];
//     startPath = startPath || path;

//     // Check for level and level type if applicable
//     if (exports.isLevel(path) &&
//         (!types || exports.containsAll(createLevel(path).getTypes(), types))) return path;

//     // Check for fs root
//     if (PATH.isRoot(path)) return startPath;

//     return findLevel(PATH.dirname(path), types, startPath);
// };







--------------------------------------------------
CLI

.opt()
  .name('level').short('l').long('level')
  .title('level directory path')
  // .val(function(l) {
  //     return typeof l === 'string'? require('./level').createLevel(l) : l;
  // })
  .end()


// .opt()
  //     .name('dir').short('C').long('chdir')
  //     .title('change process working directory, cwd by default; to specify level use --level, -l option instead')
  //     .def(process.cwd())
  //     .val(function(d) {
  //         return PATH.join(PATH.resolve(d), PATH.dirSep);
  //     })
  //     .act(function(opts) {
  //         process.chdir(opts.dir);
  //     })
  //     .end()
