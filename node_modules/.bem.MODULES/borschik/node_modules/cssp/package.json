{
  "_args": [
    [
      {
        "name": "cssp",
        "raw": "cssp@1.0.6",
        "rawSpec": "1.0.6",
        "scope": null,
        "spec": "1.0.6",
        "type": "version"
      },
      "C:\\sublime\\Data\\Packages\\BemTools\\node_modules\\bem\\node_modules\\borschik"
    ]
  ],
  "_defaultsLoaded": true,
  "_engineSupported": true,
  "_from": "cssp@1.0.6",
  "_id": "cssp@1.0.6",
  "_inCache": true,
  "_location": "/bem/borschik/cssp",
  "_nodeVersion": "v0.6.19",
  "_npmUser": {
    "email": "skryzhanovsky@gmail.com",
    "name": "afelix"
  },
  "_npmVersion": "1.1.24",
  "_phantomChildren": {},
  "_requested": {
    "name": "cssp",
    "raw": "cssp@1.0.6",
    "rawSpec": "1.0.6",
    "scope": null,
    "spec": "1.0.6",
    "type": "version"
  },
  "_requiredBy": [
    "/bem/borschik"
  ],
  "_resolved": "https://registry.npmjs.org/cssp/-/cssp-1.0.6.tgz",
  "_shasum": "5ac64fba22a90a12347e46e035982182c1bf1b01",
  "_shrinkwrap": null,
  "_spec": "cssp@1.0.6",
  "_where": "C:\\sublime\\Data\\Packages\\BemTools\\node_modules\\bem\\node_modules\\borschik",
  "author": {
    "email": "skryzhanovsky@ya.ru",
    "name": "Sergey Kryzhanovsky",
    "url": "http://github.com/afelix"
  },
  "bin": {
    "cssp": "./bin/cssp"
  },
  "bugs": {
    "url": "https://github.com/css/cssp/issues"
  },
  "dependencies": {
    "ometajs": "~ 3.1.x"
  },
  "description": "CSSP — Ometa-JS based CSS parser",
  "devDependencies": {},
  "directories": {
    "lib": "./lib"
  },
  "dist": {
    "shasum": "5ac64fba22a90a12347e46e035982182c1bf1b01",
    "tarball": "https://registry.npmjs.org/cssp/-/cssp-1.0.6.tgz"
  },
  "engines": {
    "node": ">=0.4.0"
  },
  "homepage": "http://github.com/css/cssp",
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "main": "./lib/csspapi",
  "maintainers": [
    {
      "email": "skryzhanovsky@gmail.com",
      "name": "afelix"
    }
  ],
  "name": "cssp",
  "optionalDependencies": {},
  "readme": "## Предварительные требования:\n\n* Node.js: http://nodejs.org\n* npm: https://github.com/isaacs/npm\n\n##Установка, удаление и обновление:\n\nУстановка: `npm install cssp`\n\nОбновление: `npm update cssp`\n\nУдаление: `npm uninstall cssp`\n\n## Описание\n\nПо умолчанию CSSP разбирает входной CSS-текст в дерево (parser -- P), затем отправляет дерево на трансформацию (transformer -- TF), после чего транслирует в CSS-текст (translator -- TL).\n\nТаким образом полный цикл выглядит как CSS -> P -> TF -> TL -> CSS, и без указания ключей CSSP отдаст тот же текст, что был на входе.\n\n## Использование\n\nИспользование command line интерфейса:\n\n    cssp\n        показывает этот текст\n    cssp <имя_файла>\n        считывает CSS из <имя_файла> и записывает результат полного цикла (тот же CSS) в stdout\n    cssp <имя_файла> -dp\n    cssp <имя_файла> --parser\n        считывает CSS из <имя_файла> и записывает результат CSS -> P -> stdout\n    cssp <имя_файла> -df\n    cssp <имя_файла> --transformer\n        считывает CSS из <имя_файла> и записывает результат CSS -> P -> TF -> stdout\n    cssp <имя_файла> -dl\n    cssp <имя_файла> --translator\n        считывает CSS из <имя_файла> и записывает результат CSS -> P -> TF -> TL -> stdout\n    cssp <имя_файла> -r <имя_правила>\n    cssp <имя_файла> --rule <имя_правила>\n        считывает CSS из <имя_файла> и передаёт в цикл (P TF TL) <имя_правила>, которое надо обработать\n    cssp <имя_файла> -t\n    cssp <имя_файла> --trim\n        считывает CSS из <имя_файла> и удаляет начальные и концевые пробельные символы\n\nПримеры:\n\n    1) test.css = 'color: red'\n    > cssp test.css -r declaration -dp\n    > ['declaration',\n        ['property',\n          ['ident', 'color']],\n        ['value',\n          ['s', ' '],\n          ['ident', 'red']]]\n    2) test.css = '10px'\n    > cssp test.css -r dimension -dp -dl\n    > ['dimension',\n        ['number', '10'], 'px']\n      10px\n\nПример программного использования (Node.js):\n\n    var cssp = require('cssp'),\n        src = 'a { color: red }',\n        tree, trans,\n        dst;\n\n    tree = cssp.parse(src);\n    trans = cssp.transform(tree);\n    dst = cssp.translate(trans);\n\n    console.log('Source CSS:');\n    console.log(src);\n    console.log('Parser out:');\n    console.log(tree);\n    console.log('Transformer out:');\n    console.log(trans);\n    console.log('Translator out:');\n    console.log(dst);\n",
  "repository": {
    "type": "git",
    "url": "git://github.com/css/cssp.git"
  },
  "version": "1.0.6"
}
